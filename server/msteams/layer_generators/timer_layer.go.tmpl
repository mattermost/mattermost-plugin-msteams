// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.
// See LICENSE.txt for license information.

// Code generated by "make generate"
// DO NOT EDIT

package client_timerlayer

import (
	"errors"
	"io"
	"strconv"
	"time"

	"github.com/microsoftgraph/msgraph-sdk-go/models"
	"golang.org/x/oauth2"

	"github.com/mattermost/mattermost-plugin-msteams/server/metrics"
	"github.com/mattermost/mattermost-plugin-msteams/server/msteams"
	"github.com/mattermost/mattermost-plugin-msteams/server/msteams/clientmodels"
)

type {{.Name}} struct {
	msteams.Client
	metrics metrics.Metrics
}

{{range $index, $element := .Methods}}
func (c *{{$.Name}}) {{$index}}({{$element.Params | joinParamsWithType}}) {{$element.Results | joinResultsForSignature}} {
	statusCode := "2XX"
	success := "true"
	start := time.Now()

	{{if $element.Results | len | eq 0}}
	c.Client.{{$index}}({{$element.Params | joinParams}})
	{{else}}
	{{genResultsVars $element.Results false }} := c.Client.{{$index}}({{$element.Params | joinParams}})
	{{end}}
	elapsed := float64(time.Since(start)) / float64(time.Second)

	{{if $element.Results | errorPresent}}
	if err != nil {
		success = "false"
		statusCode = "0"
		var apiErr *msteams.GraphAPIError
		if errors.As(err, &apiErr) {
			statusCode = strconv.Itoa(apiErr.StatusCode)
		}
	}
	{{end}}

	c.metrics.ObserveMSGraphClientMethodDuration("Client.{{$index}}", success, statusCode, elapsed)
	{{ with (genResultsVars $element.Results false ) -}}
	return {{ . }}
	{{- end }}
}
{{end}}

func New(childClient msteams.Client, metrics metrics.Metrics) *{{.Name}} {
	return &{{.Name}}{
		Client: childClient,
		metrics: metrics,
	}
}
